% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FGMRM.R
\name{FGMRM}
\alias{FGMRM}
\title{Regularized Finite Gaussian Mixture Regression Model Using MM Algorithm}
\usage{
FGMRM(
  x,
  y,
  G,
  tol = 0.001,
  max_iter = 500,
  lambda = NULL,
  lambda_max = NULL,
  n_lambda = 100,
  alpha = seq(0, 1, by = 0.1),
  verbose = TRUE,
  penalty = TRUE,
  random = FALSE,
  n_random_la = 100,
  automatic_stopping = FALSE,
  parallel = TRUE
)
}
\arguments{
\item{x}{Predictor/design matrix. A numeric matrix of size n x p where the
number of rows is equal to the number of observations n, and the number of
columns is equal to the number of covariates p.}

\item{y}{Response vector. Either a numeric vector, or something coercible to
one.}

\item{G}{An integer greater than or equal to two specifying the maximum
number of mixture components (groups) in the estimated model that the
function will attempt to fit the data to.}

\item{tol}{A non-negative numeric value specifying the stopping criteria for
the MM algorithm (default value is 10e-04). If the difference in value of the
objective function being minimized is within tol in two consecutive
iterations, the algorithm stops.}

\item{max_iter}{An integer greater than or equal to one specifying the
maximum number of iterations ran within the MM algorithm. Default value is
500.}

\item{lambda}{A list of length G of numeric vectors containing non-negative
tuning parameters specifying various strengths of the sparse group lasso
penalty to be applied. Finite Gaussian mixture regression models will be
estimated using each lambda value. Default value is NULL as the function will
initialize a lambda vector for each group count using an algorithm.}

\item{lambda_max}{A non-negative numeric value specifying the maximum lambda
value (tuning parameter) used in the creation of each lambda vector. Default
value is NULL as the function will initialize lambda_max for each group.}

\item{n_lambda}{An integer greater than one (default value 100) specifying
the length of the lambda vector for each group.}

\item{alpha}{A numeric vector containing values between zero and one
inclusive specifying different weights between the lasso penalty and group
lasso penalty being applied. Alpha = 1 gives the lasso fit and alpha = 0
gives the group lasso fit. Default value is a numeric vector of length 11:
c(0, 0.1, 0.2, ..., 1).}

\item{verbose}{A logical value which, if true (default value), allows the
function to print progress updates.}

\item{penalty}{A logical value which, if true (default value), allows the
function to apply the sparse group lasso penalty to the regression parameter
updates and objective function within iterations of the MM algorithm.}

\item{random}{A logical value which, if true (false is the default value),
allows the function to take a random sample of size n_random_la from the
lambda-alpha pairs and run the MM algorithm over the reduced penalty grid.}

\item{n_random_la}{A non-negative integer (default value 100) specifying the
number of lambda-alpha pairs to be sampled when random is TRUE.}

\item{automatic_stopping}{A logical value which, if true (false is the
default value), allows the function to implement BIC automatic stopping on
the mixture components. When the condition for stopping is met, the function
stops iterating over the group count.}

\item{parallel}{A logical value which, if true (default value), allows the
function to run parallel workers to increase computational speed.}
}
\value{
An object of class FGMRM containing the parameters of the estimated
finite Gaussian mixture regression model (bic, log_likelihood, beta, pi,
sigma, z, z_hard, y_hat, mse, mse_fitted, alpha, lambda), number of mixture
components, parameters of models with the same alpha, and a numeric
matrix containing the alpha, lambda, and bic values of all estimated models
for plotting purposes.
}
\description{
Applies the Majorization-Minimization Algorithm to the inputted data over all
group counts from 2 to G and all lambda-alpha pairs given the specified
parameters to estimate a finite Gaussian mixture regression model. The
function chooses the model with the lowest bic. It can be ran sequentially or
in parallel. This function is for model estimation.
}
\examples{
\dontshow{if (rlang::is_installed("mvtnorm")) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}

set.seed(2025)

# ----Simulate data----
n <- 500   # total samples
p <- 6     # number of covariates
G <- 3     # number of mixture components
rho = 0.2  # correlation

# ----True parameters for 3 clusters----
betas <- matrix(c(
  1,  2, -1,  0.5, 0, 0, 0,  # component 1
  5, -2,  1,  0, 0, 0, 0,  # component 2
  -3, 0,  2, 0, 0, 0, 0     # component 3
), nrow = G, byrow = TRUE)
pis <- c(0.4, 0.4, 0.2)
sigmas <- c(3, 1.5, 1)/2

# ----Generate correlation matrix----
cor_mat <- outer(1:p, 1:p, function(i, j) rho^abs(i - j))
Sigma <- cor_mat

# ----Simulate design matrix X (n Ã— p)----
X <- mvtnorm::rmvnorm(n, mean = rep(0, p), sigma = Sigma)

# ----Generate responsibilities----
z <- rmultinom(n, size = 1, prob = pis)
groups <- apply(z, 2, which.max)

# ----b0 + b1x1 + b2x2 + ... + bkxp----
mu_vec <- rowSums(cbind(1, X) * betas[groups, ])

# ----Simulate response y----
y <- rnorm(n, mean = mu_vec, sd = sigmas[groups])

mod <- FGMRM(x = X, y = y, G = 6, verbose = FALSE)
\dontshow{\}) # examplesIf}
}
